set $domain "example.org"

server {
    # Просулшиваемые порты
    listen 80;
    listen [::]:80;

    # Домены по который пользователи будут обращатья к сайту
    server_name $domain;

    client_max_body_size 500G;

    # Отключает выдачу версии nginx на страницах ошибок и в поле заголовка ответа «Сервер».
    # Лучше для безопасности
    server_tokens off;


    # Путь для обновления сертефикатов
    location ~ /.well-known/acme-challenge {
        allow all;
        root /certbot;
    }

    # Перенаправляем небезопасное http соединение на https
    location / {
        rewrite ^ https://$domain$request_uri? permanent;
    }
}

server {
    # Просулшиваемые порты
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Доменное имя по которому будут обращаться пользователи
    server_name $domain;

    client_max_body_size 500G;

    # Отключает выдачу версии nginx на страницах ошибок и в поле заголовка ответа «Сервер».
    # Лучше для безопасности
    server_tokens off;

    # Пути до сертефикатов
    ssl_certificate /etc/letsencrypt/live/$domain/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/$domain/privkey.pem;

    # Главная страница index
    location / {
        root /var/www/html;
        index index.html index.htm;
    }
    # Страницы с ошибками
    error_page 500 502 503 504 404 /404.html;
    location = /404.html {
        root /var/www/html;
    }

    # # Frontend
    # location / {
    #     proxy_pass http://frontend:3000/;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
        
    # }
    
    # location /api/ {
    #         add_header Access-Control-Allow-Headers "*" always;
    #         add_header Access-Control-Allow-Origin "*" always;
    #         add_header Access-Control-Allow-Credentials true;
    #         add_header Access-Control-Expose-Headers Access-Control-Allow-Origin;
    #     if ($request_method = OPTIONS ) {
            
    #         return 200;
    #     }
    #     proxy_pass http://backend:8000/api/;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";

    # }

    # location /admin/ {
    #     proxy_pass http://backend:8000/admin/;
    #     proxy_redirect off;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # location /static/admin/ {
    #     root /var/html/;
    # }

    # location /static/rest_framework/ {
    #     root /var/html/;
    # }

    # location /media/ { 
    #         add_header Access-Control-Allow-Headers "*" always;
    #         add_header Access-Control-Allow-Origin "*" always;
    #         add_header Access-Control-Allow-Credentials true;
    #         add_header Access-Control-Expose-Headers Access-Control-Allow-Origin;
    #     if ($request_method = OPTIONS ) {
            
    #         return 200;
    #     }
    #     root /var/html/;
    # }
}