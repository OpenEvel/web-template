server {
    # Просулшиваемые порты
    listen 80;
    listen [::]:80;

    # Домены по который пользователи будут обращатья к сайту
    server_name ${DOMAIN};

    client_max_body_size 500G;

    # Отключает выдачу версии nginx на страницах ошибок и в поле заголовка ответа «Сервер».
    # Лучше для безопасности
    server_tokens off;


    # Путь для обновления сертефикатов
    location ~ /.well-known/acme-challenge {
        allow all;
        root /certbot;
    }

    # Перенаправляем небезопасное http соединение на https
    location / {
        rewrite ^ https://${DOMAIN}${DOLLAR}request_uri? permanent;
    }
}

server {
    # Просулшиваемые порты
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    # Доменное имя по которому будут обращаться пользователи
    server_name ${DOMAIN};

    client_max_body_size 500G;

    # Отключает выдачу версии nginx на страницах ошибок и в поле заголовка ответа «Сервер».
    # Лучше для безопасности
    server_tokens off;

    # Пути до сертефикатов
    ssl_certificate /etc/letsencrypt/live/${DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/${DOMAIN}/privkey.pem;

    # Главная страница index

    # Страницы с ошибками
    error_page 500 502 503 504 404 /404.html;
    location = /404.html {
        root /frontend;
    }

    # Frontend
    location / {
        root /frontend;
        try_files ${DOLLAR}uri ${DOLLAR}uri/ /index.html;
    }

    # # Frontend
    # location / {
    #     proxy_pass http://frontend:3000/;
    #     proxy_redirect off;
    #     proxy_set_header Host ${DOLLAR}host;
    #     proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #     proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    #     proxy_set_header Connection "upgrade";
        
    # }
    
    # location /api/ {
    #         add_header Access-Control-Allow-Headers "*" always;
    #         add_header Access-Control-Allow-Origin "*" always;
    #         add_header Access-Control-Allow-Credentials true;
    #         add_header Access-Control-Expose-Headers Access-Control-Allow-Origin;
    #     if (${DOLLAR}request_method = OPTIONS ) {
            
    #         return 200;
    #     }
    #     proxy_pass http://backend:8000/api/;
    #     proxy_redirect off;
    #     proxy_set_header Host ${DOLLAR}host;
    #     proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #     proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    #     proxy_set_header Connection "upgrade";

    # }

    # location /admin/ {
    #     proxy_pass http://backend:8000/admin/;
    #     proxy_redirect off;
    #     proxy_set_header Host ${DOLLAR}host;
    #     proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #     proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #     proxy_set_header Upgrade ${DOLLAR}http_upgrade;
    #     proxy_set_header Connection "upgrade";
    # }

    # location /static/admin/ {
    #     root /var/html/;
    # }

    # location /static/rest_framework/ {
    #     root /var/html/;
    # }

    # location /media/ { 
    #         add_header Access-Control-Allow-Headers "*" always;
    #         add_header Access-Control-Allow-Origin "*" always;
    #         add_header Access-Control-Allow-Credentials true;
    #         add_header Access-Control-Expose-Headers Access-Control-Allow-Origin;
    #     if (${DOLLAR}request_method = OPTIONS ) {
            
    #         return 200;
    #     }
    #     root /var/html/;
    # }
}